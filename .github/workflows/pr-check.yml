name: PR Check

on:
  pull_request:
    branches: [develop, main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Web dependencies
        working-directory: ./apps/web
        run: npm ci

      - name: Lint Web
        working-directory: ./apps/web
        run: npm run lint

      - name: Type check Web
        working-directory: ./apps/web
        run: npm run type-check

      - name: Build Web
        working-directory: ./apps/web
        run: npm run build

      - name: Install Workers dependencies
        working-directory: ./apps/workers
        run: npm ci

      - name: Build Workers
        working-directory: ./apps/workers
        run: npm run build

  preview-deploy:
    name: Preview Deploy
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Web dependencies
        working-directory: ./apps/web
        run: npm ci

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: |
            casto-pr-{{BRANCH}}.vercel.app

  workers-preview:
    name: Workers Preview
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Workers dependencies
        working-directory: ./apps/workers
        run: npm ci

      - name: Deploy Workers Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: './apps/workers'
          command: deploy --env preview
