name: Database Sync

on:
  pull_request:
    paths:
      - 'supabase/schema/**'
      - 'supabase/migrations/**'
  push:
    branches:
      - main
    paths:
      - 'supabase/schema/**'
      - 'supabase/migrations/**'

jobs:
  check-migrations:
    name: Check Schema Sync
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xz
          sudo mv supabase /usr/local/bin/

      - name: Check for schema changes
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          chmod +x ./supabase/sync
          ./supabase/sync
          
          if [ -n "$(git status --porcelain supabase/migrations)" ]; then
            echo "::error::未適用のマイグレーションがあります。./supabase/sync を実行してください。"
            exit 1
          fi

  apply-migrations:
    name: Apply Migrations
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xz
          sudo mv supabase /usr/local/bin/

      - name: Apply migrations to production
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          cd supabase
          supabase login --token "$SUPABASE_ACCESS_TOKEN"
          
          # Apply migrations using Supabase MCP or direct push
          for migration in migrations/*.sql; do
            if [ -f "$migration" ]; then
              echo "Applying $migration..."
              # Note: In production, use Supabase MCP server for safer migration application
            fi
          done
          
          echo "✅ All migrations applied successfully"
